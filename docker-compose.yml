version: '3.8'

services:
  # Streamlit App
  streamlit:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: vexaai-streamlit
    ports:
      - "8501:8501"
    environment:
      - N8N_WEBHOOK_URL=http://n8n:5678/webhook/chat
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
    volumes:
      - ./app.py:/app/app.py
      - ./.streamlit:/app/.streamlit
    depends_on:
      - n8n
    restart: unless-stopped
    networks:
      - vexaai-network

  # n8n Workflow Automation
  n8n:
    image: docker.n8n.io/n8nio/n8n:latest
    container_name: vexaai-n8n
    ports:
      - "5678:5678"
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=${N8N_USER:-admin}
      - N8N_BASIC_AUTH_PASSWORD=${N8N_PASSWORD:-changeme}
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - WEBHOOK_URL=http://n8n:5678/
      - GENERIC_TIMEZONE=UTC
      - N8N_LOG_LEVEL=info
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows
    restart: unless-stopped
    networks:
      - vexaai-network

  # PostgreSQL (if not using Supabase)
  postgres:
    image: postgres:15-alpine
    container_name: vexaai-postgres
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=vexaai
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./supabase_schema.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    networks:
      - vexaai-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Weaviate Vector Database (optional local instance)
  weaviate:
    image: semitechnologies/weaviate:latest
    container_name: vexaai-weaviate
    ports:
      - "8080:8080"
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'false'
      AUTHENTICATION_APIKEY_ENABLED: 'true'
      AUTHENTICATION_APIKEY_ALLOWED_KEYS: ${WEAVIATE_API_KEY:-weaviate-secret-key}
      AUTHENTICATION_APIKEY_USERS: 'admin'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      CLUSTER_HOSTNAME: 'node1'
      ENABLE_MODULES: 'text2vec-openai,text2vec-cohere,text2vec-huggingface'
    volumes:
      - weaviate_data:/var/lib/weaviate
    restart: unless-stopped
    networks:
      - vexaai-network

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: vexaai-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - streamlit
      - n8n
    restart: unless-stopped
    networks:
      - vexaai-network

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: vexaai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - vexaai-network
    command: redis-server --appendonly yes

volumes:
  n8n_data:
    driver: local
  postgres_data:
    driver: local
  weaviate_data:
    driver: local
  redis_data:
    driver: local

networks:
  vexaai-network:
    driver: bridge